name: Playwright Tests
on:
  # Trigger the workflow manually
  workflow_dispatch:
    paths:
      - 'playwright-tests/tests/**'
      - '!playwright-tests/tests/component-testing/**' # Exclude component-testing
      - 'playwright-tests/playwright.config.ts'
      - 'playwright-tests/package-lock.json'
      - 'playwright-tests/package.json'  

  # Trigger the workflow on a direct commit to the main branch
  push:
    branches: [main]
    paths:
      - 'playwright-tests/tests/**'
      - '!playwright-tests/tests/component-testing/**' # Exclude component-testing
      - 'playwright-tests/playwright.config.ts'
      - 'playwright-tests/package-lock.json'
      - 'playwright-tests/package.json'
  
  # Trigger the workflow when a Pull Request is created or merged into the main branch
  pull_request:
    branches: [main]
    paths:
      - 'playwright-tests/tests/**'
      - '!playwright-tests/tests/component-testing/**' # Exclude component-testing
      - 'playwright-tests/playwright.config.ts'
      - 'playwright-tests/package-lock.json'
      - 'playwright-tests/package.json'
  # Schedule automatic runs (8 times a day from 9:00 AM to 4:00 PM Vietnam time | 2:00 AM UTC to 9:00 AM UTC)
  schedule:
    - cron: '0 2-9 * * *' 
jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: lts/*
      - name: Install dependencies
        working-directory: playwright-tests
        run: npm ci
      - name: Install Playwright Browsers
        working-directory: playwright-tests
        run: npm run install:drivers
      - name: Run Playwright tests
        working-directory: playwright-tests
        env:
          CI: true
          HEADLESS_MODE: ${{ vars.HEADLESS_MODE }}
          ENVIRONMENT: ${{ secrets.ENVIRONMENT }}
          BASE_URL: ${{ secrets.BASE_URL }}
          USER_EMAIL: ${{ secrets.USER_EMAIL }}
          INVALID_EMAIL: ${{ secrets.INVALID_EMAIL }}
          INVALID_TENANT: ${{ secrets.INVALID_TENANT }}
          OTP_API_KEY: ${{ secrets.OTP_API_KEY }}
          OTP_API_URL: ${{ secrets.OTP_API_URL }}
        run: npm test
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30
      
      - name: Extract test results
        if: always()
        run: |
          PASSED=$(jq '[.suites[].specs[] | select(.ok == true)] | length' playwright-tests/playwright-report/results.json)
          FAILED=$(jq '[.suites[].specs[] | select(.ok == false)] | length' playwright-tests/playwright-report/results.json)
          PASSED_TESTS=$(jq -r '[.suites[].specs[] | select(.ok == true)] | map(.title) | join("\n")' playwright-tests/playwright-report/results.json)
          FAILED_TESTS=$(jq -r '[.suites[].specs[] | select(.ok == false)] | map(.title) | join("\n")' playwright-tests/playwright-report/results.json)
          echo "PASSED=$PASSED" >> $GITHUB_ENV
          echo "FAILED=$FAILED" >> $GITHUB_ENV
          echo "PASSED_TESTS<<EOF" >> $GITHUB_ENV
          echo "$PASSED_TESTS" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
          echo "FAILED_TESTS<<EOF" >> $GITHUB_ENV
          echo "$FAILED_TESTS" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
        shell: bash

      - name: Notify Slack on success
        if: success()
        uses: slackapi/slack-github-action@v1
        with:
          payload: |
            {
              "channel": "#uncle-k",
              "username": "CI Bot",
              "text": "‚úÖ Playwright tests passed on commit ${{ github.sha }}.\nüìä Passed: ${{ env.PASSED }}\n\n‚úÖ *Passed Tests:*\n```\n${{ env.PASSED_TESTS }}\n```"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Notify Slack on failure
        if: failure()
        uses: slackapi/slack-github-action@v1
        with:
          payload: |
            {
              "channel": "#uncle-k",
              "username": "CI Bot",
              "text": "‚ùå Playwright tests failed on commit ${{ github.sha }}.\nüìä Passed: ${{ env.PASSED }} | ‚ùå Failed: ${{ env.FAILED }}\n\n‚úÖ *Passed Tests:*\n```{{ env.PASSED_TESTS }}```\n\n‚ùå *Failed Tests:*\n```{{ env.FAILED_TESTS }}```"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
